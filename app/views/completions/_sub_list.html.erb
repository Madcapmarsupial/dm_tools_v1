

<!-- takes in an array of sub models that can be created/generated and a type of model
  fields name completion
  components name completion qty alignment

  parent id
  name
  completion



  field_list_item_form
  component_list_form 


  quests.scenes
    order_number
    title
    description
    narrative_connection_to_next_event 


The fields_for helper creates a similar binding but without rendering a <form> tag. 
  This can be used to render fields for additional model objects within the same form. 
  For example, if you had a Person model with an associated ContactDetail model, 
  you could create a single form for both like so:

<%# form_with model: @person do |person_form| %>
  <%# person_form.text_field :name %>
  <%# fields_for :contact_detail, @person.contact_detail do |contact_detail_form| %>
    <%# contact_detail_form.text_field :phone_number %>
  <% end %>
<% end %>

-->

  <%= form_with model: field do |form| %>
   <%= form.hidden_field :field_id, value: "foo" %>
   <%= form.text_field :name, value: field.name %>  <!-- model_type[title] -->
   <%= form.text_area :description, size: "60x10" %>





  <%= form.submit %>
<% end %>


